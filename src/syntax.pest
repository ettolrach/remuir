// remuir: a register machine emulator written in Rust.
// Copyright (C) 2024  Charlotte Ausel
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

WHITESPACE = _{ " " | "\t" }
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }

label_char = _{ !(":" | NEWLINE | instruction) ~ ANY }
label = _{ label_char+ }
line_label = { label+ ~ ":" }
reference_label = { label+ }

register_num = @{ ASCII_DIGIT+ }
pos_register_num = ${ ASCII_DIGIT+ }
neg_register_num = ${ ASCII_DIGIT+ }
positive_register = _{ pos_register_num }
negative_register = _{ "-" ~ neg_register_num }
register_name = _{ "r" ~ (positive_register | negative_register) }

// Instructions
inc = { "inc" ~ register_name }
decjz = { "decjz" ~ register_name ~ reference_label }
many = { "many" ~ register_name+ }

instruction = { inc | decjz | many }

register_line = { "registers" ~ (register_num)+ }
instruction_line = { line_label? ~ instruction }

file = { SOI ~ NEWLINE* ~ register_line? ~ (NEWLINE+ ~ instruction_line)* ~ NEWLINE* ~ EOI}
